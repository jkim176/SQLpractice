1. Write the following queries in SQL, using the university schema.

a. Find the names of all studentswho have taken at least one Comp. Sci.
course; make sure there are no duplicate names in the result.
b. Find the IDs and names of all students who have not taken any course
offering before Spring 2009.
c. For each department, find the maximum salary of instructors in that
department. You may assume that every department has at least one
instructor.
d. Find the lowest, across all departments, of the per-department maximum
salary computed by the preceding query.

2. Show how to define a view tot credits (year, num credits), giving the total
number of credits taken by students in each year.

classroom(building, room number, capacity)
department(dept name, building, budget)
course(course id, title, dept name, credits)
instructor(ID, name, dept name, salary)
section(course id, sec id, semester, year, building, room number, time slot id)
teaches(ID, course id, sec id, semester, year)
student(ID, name, dept name, tot cred)
takes(ID, course id, sec id, semester, year, grade)
advisor(s ID, i ID)
time slot(time slot id, day, start time, end time)
prereq(course id, prereq id)

1.a.

SELECT			DISTINCT student.name
FROM			student
	NATURAL JOIN	takes
	ON		student.ID = takes.ID
	NATURAL JOIN	course
	ON		takes.course_id = course.course_id
WHERE			course.dept_name = ‘Comp. Sci.’
;

1.b.

SELECT				student.name
,				student.ID
,				COUNT(takes.ID) AS taken_before_2009
FROM				student
	LEFT OUTER JOIN		takes
	ON			student.ID = takes.ID
WHERE				takes.year < 2009
GROUP BY			student.name
,				student.ID
HAVING				COUNT(takes.ID) = 0
;

1.c

SELECT			dept_name
,			MAX(salary)
FROM			instructor
GROUP BY		dept_name

1.d

SELECT			MIN(max_salary) AS min_max_salary
FROM	(
	SELECT			dept_name
	,			MAX(salary) AS max_salary
	FROM			instructor
	GROUP BY		dept_name
	)
;

2.


CREATE VIEW tot_credits AS
	SELECT			takes.year
	,			SUM(course.credits) AS num_credits
	FROM			takes
		NATURAL JOIN	course
			ON	takes.course_id = course.course_id
	GROUP BY		takes.year
;
